{"version":3,"sources":["components/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["Calculator","useState","output","setOutput","result","setResult","color","setColor","isNumber","character","clickNumber","number","slice","expression","value","concat","includes","Function","toString","clickOperator","operator","length","className","type","style","height","disabled","onClick","backgroundColor","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6aa6cd67.chunk.js","sourcesContent":["import React from 'react'\n\nimport { useState } from 'react'\n\nconst Calculator = () => {\n    const [output, setOutput] = useState('')\n    const [result, setResult] = useState('')\n    const [color, setColor] = useState('#49ff53')\n\n    const isNumber = (character) => {\n        return character >= '0' && character <= '9'\n    }\n\n    const containsOperator = (expression) => {\n        return expression.includes('+') || expression.includes('-') || expression.includes('*') || expression.includes('/')\n    }\n\n    const clickNumber = (number) => {\n        if(!isNumber(output.slice(-1))) {\n            setColor('white')\n        }\n\n        const value = output.concat(number)\n        setOutput(value)\n\n        if(containsOperator(value)) {\n            // Risky : still represents eval()\n            setResult(Function('\"use strict\";return ' + value)().toString());\n        }\n    }\n\n    const clickOperator = (operator) => {\n        if(!isNumber(output.slice(-1))) {\n            return\n        }\n        \n        if(operator === '='){\n            if(result.length === 0) {\n                setColor('#49ff53')\n            } else {\n                setOutput(result)\n                setResult('')\n                setColor('#49ff53')\n            }\n        } else {\n            if(operator === '×'){\n                operator = '*'\n            } else if (operator === '÷') {\n                operator = '/'\n            }\n\n            setOutput(output.concat(operator))\n            setResult('')\n\n            if(color !== 'white') {\n                setColor('white')\n            }\n        }\n    }\n\n    const clickClear = () => {\n        setOutput('')\n        setResult('')\n        setColor('#49ff53')\n    }\n\n    return (\n        <div className='calculator'>\n            <input className='calculator-output' type='text' value={output} style={{ height: '11%', color: color }} disabled={true} />\n            <input className='calculator-output calculator-result' type='text' value={result} style={{ height: '11%' }} disabled={true} />\n\n            <div className='calculator-btns'>\n                <button className='calculator-btn calculator-number' onClick={ () => clickNumber('7') }>7</button>\n                <button className='calculator-btn calculator-number' onClick={ () => clickNumber('8') }>8</button>\n                <button className='calculator-btn calculator-number' onClick={ () => clickNumber('9') }>9</button>\n                <button className='calculator-btn calculator-operator' onClick={ () => clickOperator('÷') }>÷</button>\n\n                <button className='calculator-btn calculator-number' onClick={ () => clickNumber('4') }>4</button>\n                <button className='calculator-btn calculator-number' onClick={ () => clickNumber('5') }>5</button>\n                <button className='calculator-btn calculator-number' onClick={ () => clickNumber('6') }>6</button>\n                <button className='calculator-btn calculator-operator' onClick={ () => clickOperator('×') }>×</button>\n\n                <button className='calculator-btn calculator-number' onClick={ () => clickNumber('1') }>1</button>\n                <button className='calculator-btn calculator-number' onClick={ () => clickNumber('2') }>2</button>\n                <button className='calculator-btn calculator-number' onClick={ () => clickNumber('3') }>3</button>\n                <button className='calculator-btn calculator-operator' onClick={ () => clickOperator('-') }>-</button>\n                \n                <button className='calculator-btn calculator-clear' onClick={ () => clickClear() }>C</button>\n                <button className='calculator-btn calculator-number' onClick={ () => clickNumber('0') }>0</button>\n                <button className='calculator-btn calculator-operator' onClick={ () => clickOperator('=') } style={{ backgroundColor: '#009708', color: 'white' }}>=</button>\n                <button className='calculator-btn calculator-operator' onClick={ () => clickOperator('+') } >+</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Calculator\n","import React from 'react'\n\nimport Calculator from './components/Calculator'\n\nconst App = () => {\n  return (\n    <div>\n      <Calculator />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}